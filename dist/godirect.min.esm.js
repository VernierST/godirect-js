/**
 * Copyright (c) 2023 Vernier Software. All rights reserved.
 * This code may only be used under the BSD 3-Clause license found at
 * https://raw.githubusercontent.com/VernierST/godirect-js/main/LICENSE
 */

const e=new Uint8Array([88,0,0,0]),t=new Uint8Array([26,165,74,6,73,7,72,8,71,9,70,10,69,11,68,12,67,13,66,14,65]),s=new Uint8Array([24,255,1,0,0,0,0,0,0,0,0,0,0,0,0]),n=new Uint8Array([25,255,0,255,255,255,255]),i=new Uint8Array([27,255,0,0,0,0,0,0,0,0,0]),r={HEADER:e,INIT:t,DISCONNECT:new Uint8Array([84]),START_MEASUREMENTS:s,STOP_MEASUREMENTS:n,SET_MEASUREMENT_PERIOD:i,GET_INFO:new Uint8Array([85]),GET_STATUS:new Uint8Array([16]),GET_SENSOR_IDS:new Uint8Array([81]),GET_SENSOR_INFO:new Uint8Array([80,0]),GET_DEFAULT_SENSORS_MASK:new Uint8Array([86])},a=6,o=7,h=10,c=8,u=9,l=11,d=12,m=13,g=14,f=32,p=e=>0!==e;class w{constructor(){this._listenerMap=new Map}on(e,t){this._listenerMap.has(e)||this._listenerMap.set(e,[]),this._listenerMap.get(e).push(t)}off(e,t){const s=this._listenerMap.get(e);if(s&&s.length){const n=s.reduce(((e,s,n)=>"function"==typeof s&&s===t?e=n:e),-1);if(n>-1)return s.splice(n,1),this._listenerMap.set(e,s),!0}return!1}unbind(){this._listenerMap.clear()}emit(e,...t){const s=this._listenerMap.get(e);return!(!s||!s.length)&&(s.forEach((e=>{e(...t)})),!0)}}const b=function(){},_=function(){};function v(e){return Array.from(new Uint8Array(e)).map((e=>e.toString(16).padStart(2,"0"))).join(" ")}class y{constructor(e={}){this.type=e.type,this.mode=e.mode,this.minValue=e.minValue,this.maxValue=e.maxValue,this.uncertainty=e.uncertainty,this.minPeriod=e.minPeriod,this.maxPeriod=e.maxPeriod,this.typicalPeriod=e.typicalPeriod,this.granularity=e.granularity}}class S{constructor(e={}){this.number=e.number,this.name=e.name,this.unit=e.unit,this.id=e.id,this.mutalExclusionMask=e.mutalExclusionMask,this.measurementInfo=e.measurementInfo}}class U extends w{constructor(e){super(),this.number=e.number,this.name=e.name,this.unit=e.unit,this.specs=e,this.enabled=!1,this.values=[],this.value=null}clear(){this.value=null,this.values=[]}setValue(e,t){this.value=e,t&&this.values.push(this.value),this.emit("value-changed",this)}setEnabled(e){this.enabled!==e&&(this.enabled=e,this.emit("state-changed",this))}}let E;class M extends w{constructor(e){if(super(),"undefined"==typeof TextDecoder){const e=require("text-encoding");E=e.TextDecoder}else E=TextDecoder;this.device=e,this.sensors=[],this.opened=!1,this.rollingCounter=0,this.collecting=!1,this.measurementPeriod=10,this.response=null,this.remainingResponseLength=0,this.defaultSensorsMask=0,this.keepValues=!0,this.minMeasurementPeriod=10,this.serialNumber="",this.orderCode="",this.name=""}async getBatteryLevel(){return(await this._getStatus()).battery}async getChargingState(){return(await this._getStatus()).chargingStatus}async open(e=!1){if(this.opened)throw new Error("Device cannot be opened because it is already open");await this._connect(),await this._init(),await this._getStatus(),await this._getDeviceInfo(),await this._getDefaultSensorsMask(),await this._getAvailableSensors(),this._onOpened(),e&&this.start()}async close(){if(!this.opened)throw new Error("Device cannot be closed because it is not open");return await this._stopMeasurements(),await this._sendCommand(r.DISCONNECT),this._disconnect()}enableDefaultSensors(){let e=1;for(let t=0;t<32;++t){if((this.defaultSensorsMask&e)===e){const e=this.getSensor(t);e&&e.setEnabled(!0)}e<<=1}}start(e=null){let t=this.sensors.filter((e=>e.enabled));0===t.length&&(this.enableDefaultSensors(),t=this.sensors.filter((e=>e.enabled))),t.forEach((e=>e.clear())),e&&(this.measurementPeriod=e),this._startMeasurements()}stop(){this._stopMeasurements()}getSensor(e){return this.sensors.find((t=>t.number===e))}async _connect(){return this.device.setup({onClosed:()=>this._onClosed(),onResponse:e=>this._handleResponse(e)}).then((()=>{this.writeQueue=[],this.deviceWriteInterval=setInterval((()=>{if(this.writeQueue&&this.writeQueue.length>0){const e=this.writeQueue[0];e.written||(this._writeToDevice(e.buffer),e.written=!0)}}),10)}))}async _disconnect(){return clearInterval(this.deviceWriteInterval),this.device.close()}_init(){return this.collecting=!1,this.rollingCounter=255,this._sendCommand(r.INIT)}_handleResponse(e){if(b(`command notified: ${v(e.buffer)}`),this.remainingResponseLegnth>0){if(this.remainingResponseLegnth-=e.buffer.byteLength,this.response=new DataView(function(e,t){const s=new Uint8Array(e.byteLength+t.byteLength);return s.set(new Uint8Array(e),0),s.set(new Uint8Array(t),e.byteLength),s.buffer}(this.response.buffer,e.buffer.slice(0))),this.remainingResponseLegnth>0)return}else this.response=e;const t=this.response.getUint8(1);if(t>this.response.buffer.byteLength)return void(this.remainingResponseLegnth=t-this.response.buffer.byteLength);b(`handle command: ${v(this.response.buffer)}`);switch(this.response.getUint8(0)){case f:this._processMeasurements(this.response);break;default:{const e=this.response.getUint8(4),t=this.response.getUint8(5),s=new DataView(this.response.buffer,6);this._resolveWriteCommand(e,t,s),this.remainingResponseLegnth=0,this.response=null;break}}}_getSensorsWithMask(e){const t=[];let s=1;for(let n=0;n<32;++n){if((e&s)===s){const s=this.getSensor(n);s&&(t.push(s),b(`available: [${e}] ${t[t.length-1].number}`))}s<<=1}return t}_processMeasurements(e){let t=[],s=!0,n=0,i=0;const r=e.getUint8(4);switch(r){case a:t=this._getSensorsWithMask(e.getUint16(5,!0)),n=e.getUint8(7,!0),i=9;break;case o:t=this._getSensorsWithMask(e.getUint32(5,!0)),n=e.getUint8(9,!0),i=11;break;case h:case c:t[0]=this.getSensor(e.getUint8(6)),n=e.getUint8(7,!0),i=8;break;case l:case u:t[0]=this.getSensor(e.getUint8(6)),n=e.getUint8(7,!0),i=8,s=!1;break;case d:case m:case g:b(`Purposely Ignoring packet type: ${r}`);break;default:b(`Unknown packet type: ${r}`)}for(let r=0;r<n;++r)for(let n=0;n<t.length;++n)s?t[n].setValue(e.getFloat32(i,!0),this.keepValues):t[n].setValue(e.getInt32(i,!0),this.keepValues),i+=4}_resolveWriteCommand(e,t,s){const n=this.writeQueue.find((s=>s.command===e&&s.rollingCounter===t));n&&(n.resolve(s),this.writeQueue=this.writeQueue.filter((e=>e!==n)))}_onOpened(){b("opened"),this.opened=!0,this.emit("device-opened")}_onClosed(){b("closed"),this.opened=!1,this.emit("device-closed")}_decRollingCounter(){return this.rollingCounter-=1,this.rollingCounter}_calculateChecksum(e){const t=e[1];let s=-1*e[3];for(let n=0;n<t;++n)s+=e[n],s&=255;return s<0||s>255?(b("Checksum failed!"),0):s}_sendCommand(e){const t=new Uint8Array(r.HEADER.byteLength+e.byteLength);return t.set(new Uint8Array(r.HEADER),0),t.set(new Uint8Array(e),r.HEADER.byteLength),t[1]=t.length,t[2]=this._decRollingCounter(),t[3]=this._calculateChecksum(t),this._queueWriteCommand(t)}async _writeToDevice(e){let t,s=0,n=e.length;for(;n>0;)try{n>this.device.maxPacketLength?(t=e.subarray(s,s+this.device.maxPacketLength),n-=this.device.maxPacketLength,s+=this.device.maxPacketLength):(t=e.subarray(s,s+n),n=0),await this.device.writeCommand(t)}catch(e){b(`Write Failure: ${e}`)}}_queueWriteCommand(e){b(`command queued: ${v(e)}`);return new Promise(((t,s)=>{this.writeQueue.push({command:e[4],rollingCounter:e[2],buffer:e,written:!1,resolve:t,reject:s}),setTimeout((()=>{this.writeQueue=this.writeQueue.filter((t=>t.command===e[4]&&t.rollingCounter!==e[2])),s(new Error(`write command timed out after 5s. Command: ${e[4].toString(16)} Rolling Counter: ${e[2].toString(16)}`))}),5e3)}))}async _getStatus(){const e=await this._sendCommand(r.GET_STATUS);return{mainFirmwareVersion:`${e.getUint8(2)}.${e.getUint8(3)}`,bleFirmwareVersion:`${e.getUint8(6)}.${e.getUint8(9)}`,battery:e.getUint8(10),chargingStatus:`${e.getUint8(11)}`}}async _getAvailableSensors(){await this._sendCommand(r.GET_SENSOR_IDS).then((e=>{this.availableSensors=e.getUint32(0,!0),b(`Get Available Sensors Returned ${this.availableSensors}`)}));let e=1;for(let t=0;t<31;++t)(this.availableSensors&e)===e&&await this._getSensorInfo(t),e<<=1}_getDefaultSensorsMask(){return this._sendCommand(r.GET_DEFAULT_SENSORS_MASK).then((e=>{this.defaultSensorsMask=e.getUint32(0,!0),b("Default Sensors:"),_(this)}))}_getDeviceInfo(){return this._sendCommand(r.GET_INFO).then((e=>{const t=new E("utf-8");this.orderCode=t.decode(new Uint8Array(e.buffer,6,16).filter(p)),this.serialNumber=t.decode(new Uint8Array(e.buffer,22,16).filter(p)),this.name=t.decode(new Uint8Array(e.buffer,38,32).filter(p)),b("Device Info:"),_(this)}))}async _getSensorInfo(e){const t=new Uint8Array(r.GET_SENSOR_INFO);return t[1]=e,this._sendCommand(t).then((e=>{const t=e.getUint32(2,!0);if(t>0){const s=new E("utf-8"),n=new y({type:e.getUint8(6),mode:e.getUint8(7),minValue:e.getFloat64(108,!0),maxValue:e.getFloat64(116,!0),uncertainty:e.getFloat64(100,!0),minPeriod:e.getUint32(124,!0)/1e3,maxPeriod:((e.getUint32(132,!0)<<32)+e.getUint32(128,!0))/1e3,typicalPeriod:e.getUint32(136,!0)/1e3,granularity:e.getUint32(140,!0)/1e3}),i=new S({number:e.getUint8(0),name:s.decode(new Uint8Array(e.buffer,14,60).filter(p)),unit:s.decode(new Uint8Array(e.buffer,74,32).filter(p)),mutalExclusionMask:e.getUint32(144,!0),measurementInfo:n,sensorId:t}),r=new U(i);b("Get Sensor Info Returned"),_(r),this.sensors.push(r),r.on("state-changed",(()=>{b(`Sensor Restart: ${r.number}`),r.enabled&&(this.measurementPeriod=r.specs.measurementInfo.typicalPeriod,this.sensors.forEach((e=>{if(r.number!==e.number&&e.enabled){const t=1<<e.number;(t&r.specs.mutalExclusionMask)===t?e.enabled=!1:e.specs.measurementInfo.typicalPeriod>this.measurementPeriod&&(this.measurementPeriod=e.specs.measurementInfo.typicalPeriod)}}))),this._restartMeasurements()}))}}))}async _restartMeasurements(){const e=this.collecting;if(this.collecting)try{await this._stopMeasurements()}catch(e){console.error(e)}if(!this.collecting&&e)try{await this._startMeasurements()}catch(e){console.error(e)}}_setMeasurementPeriod(e){const t=new Uint8Array(r.SET_MEASUREMENT_PERIOD),s=1e3*this.minMeasurementPeriod;return e<s&&(e=s),b(`MeasurementPeriod: ${e}`),t[3]=e>>0&255,t[4]=e>>8&255,t[5]=e>>16&255,t[6]=e>>24&255,this._sendCommand(t)}_getEnabledChannelMask(){let e=0;return this.sensors.filter((e=>e.enabled)).forEach((t=>{e+=1<<t.number})),e}_startMeasurements(){return this._setMeasurementPeriod(1e3*this.measurementPeriod).then((()=>{const e=this._getEnabledChannelMask();b(`ChannelMask: ${e}`);const t=new Uint8Array(r.START_MEASUREMENTS);return t[3]=e>>0&255,t[4]=e>>8&255,t[5]=e>>16&255,t[6]=e>>24&255,this._sendCommand(t).then((e=>{0===e.getUint8(0)&&(this.collecting=!0,this.emit("measurements-started"))}))}))}_stopMeasurements(){return this._sendCommand(r.STOP_MEASUREMENTS).then((e=>{0===e.getUint8(0)&&(this.collecting=!1,this.emit("measurements-stopped"))}))}}class C{constructor(e){this.webBluetoothNativeDevice=e,this.maxPacketLength=20,this.deviceCommand=null,this.deviceResponse=null}get godirectAdapter(){return!0}async writeCommand(e){return this.deviceCommand.writeValue(e)}async setup({onClosed:e,onResponse:t}){this.webBluetoothNativeDevice.addEventListener("gattserverdisconnected",e);try{const e=await this.webBluetoothNativeDevice.gatt.connect(),s=await e.getPrimaryService("d91714ef-28b9-4f91-ba16-f0d9a604f112");(await s.getCharacteristics()).forEach((e=>{switch(e.uuid){case"f4bf14a6-c7d5-4b6d-8aa8-df1a7c83adcb":this.deviceCommand=e;break;case"b41e6675-a329-40e0-aa01-44d2f444babe":this.deviceResponse=e,this.deviceResponse.addEventListener("characteristicvaluechanged",(e=>{const s=e.target.value;t(s)})),this.deviceResponse.startNotifications();break;default:b(`No case found for ${e.uuid}`)}}))}catch(e){console.error(e)}if(!this.deviceCommand||!this.deviceResponse)throw new Error("Expected command and response characteristics not found")}async close(){return this.webBluetoothNativeDevice.gatt.disconnect()}}class A{constructor(e){this.webUsbNativeDevice=e,this.onResponse=null,this.onClosed=null,this.reportId=0,this.maxPacketLength=63}get godirectAdapter(){return!0}async writeCommand(e){const t=new Uint8Array([e.byteLength,...e]);return this.webUsbNativeDevice.sendReport(this.reportId,t)}async setup({onClosed:e,onResponse:t}){await this.webUsbNativeDevice.open(),this.onResponse=t,this.onClosed=e,this.reportId=this.webUsbNativeDevice.collections[0].outputReports[0].reportId,this.webUsbNativeDevice.oninputreport=e=>{const t=new DataView(e.data.buffer.slice(1));this.onResponse(t)}}async close(){this.webUsbNativeDevice.close(),this.onClosed()}}const D={async createDevice(e,{open:t=!0,startMeasurements:s=!0}={}){let n=e;if(!n.godirectAdapter)if(e.gatt)n=new C(e);else{if(!e.collections[0].outputReports[0])throw new Error("Device Open Failed [ No matching adapter ]");n=new A(e)}const i=new M(n);if(t)try{await i.open(s)}catch(e){throw console.error(e),new Error(`Device Open Failed [${e}]`)}return i},async selectDevice(e=!0){let t;if(e){if(!navigator.bluetooth)return Promise.reject(new Error("No Web Bluetooth support."));t=await navigator.bluetooth.requestDevice({filters:[{namePrefix:"GDX"}],optionalServices:["d91714ef-28b9-4f91-ba16-f0d9a604f112"]})}else{if(!navigator.hid)return Promise.reject(new Error("No Web HID support."));t=(await navigator.hid.requestDevice({filters:[{vendorId:2295,productId:16}]}))[0]}if(!t)throw new DOMException("No device selected.");return D.createDevice(t)}};export{D as default};
